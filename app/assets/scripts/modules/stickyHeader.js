import $ from "jquery";import waypoint from "../../../../node_modules/waypoints/lib/noframework.waypoints";import smoothScroll from "jquery-smooth-scroll";class StickyHeader {    constructor() {        this.siteHeader = $(".site-nav");        this.triggerElement = $('.large-hero__title');        this.pageSections = $(".page-section");        this.links = $(".link");        this.offset = "18%";        this.lazyLoad = $('.lazyload');        this.revealHeader();        this.currentPageSection();        this.addsmoothScrolling();        this.refreshWayPoints();    }    refreshWayPoints(){        this.lazyLoad.on("load", Waypoint.refreshAll);    }    target() {        return this.triggerElement[0];    }    addsmoothScrolling() {        this.links.smoothScroll();    }        revealHeader() {        let that = this;        let justifyClass = (direction) => {            return direction === "down" ?                that.siteHeader.addClass("site-nav__isdarker") :                that.siteHeader.removeClass("site-nav__isdarker");        }        new Waypoint({            element: that.target(),            handler: function (direction) {                return justifyClass(direction);            }        });    }    currentPageSection() {        let that = this;        this.pageSections.each(function () {            let currentSection = this;            new Waypoint({                element: currentSection,                handler: (direction) => {                    if (direction === "down") {                        let matchinglinkId = currentSection.getAttribute('data-link');                        that.links.removeClass("isCurrentActive");                        $(matchinglinkId).addClass("isCurrentActive");                    }                },                offset: "18%"            });            new Waypoint({                element: currentSection,                handler: (direction) => {                    if (direction === "up") {                        let matchinglinkId = currentSection.getAttribute('data-link');                        that.links.removeClass("isCurrentActive");                        $(matchinglinkId).addClass("isCurrentActive");                    }                },                offset: "-40%"            });        });    }}export default StickyHeader;